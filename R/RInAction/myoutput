NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
[1] "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
           Package     
KernSmooth "KernSmooth"
MASS       "MASS"      
Matrix     "Matrix"    
base       "base"      
boot       "boot"      
class      "class"     
cluster    "cluster"   
codetools  "codetools" 
compiler   "compiler"  
datasets   "datasets"  
foreign    "foreign"   
grDevices  "grDevices" 
graphics   "graphics"  
grid       "grid"      
lattice    "lattice"   
manipulate "manipulate"
methods    "methods"   
mgcv       "mgcv"      
nlme       "nlme"      
nnet       "nnet"      
parallel   "parallel"  
permute    "permute"   
plotrix    "plotrix"   
rpart      "rpart"     
rstudio    "rstudio"   
spatial    "spatial"   
splines    "splines"   
stats      "stats"     
stats4     "stats4"    
survival   "survival"  
tcltk      "tcltk"     
tools      "tools"     
utils      "utils"     
vegan      "vegan"     
           LibPath                                                         
KernSmooth "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
MASS       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
Matrix     "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
base       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
boot       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
class      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
cluster    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
codetools  "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
compiler   "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
datasets   "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
foreign    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
grDevices  "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
graphics   "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
grid       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
lattice    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
manipulate "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
methods    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
mgcv       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
nlme       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
nnet       "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
parallel   "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
permute    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
plotrix    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
rpart      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
rstudio    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
spatial    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
splines    "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
stats      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
stats4     "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
survival   "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
tcltk      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
tools      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
utils      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
vegan      "/Library/Frameworks/R.framework/Versions/3.1/Resources/library"
           Version     Priority     
KernSmooth "2.23-12"   "recommended"
MASS       "7.3-33"    "recommended"
Matrix     "1.1-4"     "recommended"
base       "3.1.1"     "base"       
boot       "1.3-11"    "recommended"
class      "7.3-10"    "recommended"
cluster    "1.15.2"    "recommended"
codetools  "0.2-8"     "recommended"
compiler   "3.1.1"     "base"       
datasets   "3.1.1"     "base"       
foreign    "0.8-61"    "recommended"
grDevices  "3.1.1"     "base"       
graphics   "3.1.1"     "base"       
grid       "3.1.1"     "base"       
lattice    "0.20-29"   "recommended"
manipulate "0.98.1083" NA           
methods    "3.1.1"     "base"       
mgcv       "1.8-0"     "recommended"
nlme       "3.1-117"   "recommended"
nnet       "7.3-8"     "recommended"
parallel   "3.1.1"     "base"       
permute    "0.8-3"     NA           
plotrix    "3.5-7"     NA           
rpart      "4.1-8"     "recommended"
rstudio    "0.98.1083" NA           
spatial    "7.3-8"     "recommended"
splines    "3.1.1"     "base"       
stats      "3.1.1"     "base"       
stats4     "3.1.1"     "base"       
survival   "2.37-7"    "recommended"
tcltk      "3.1.1"     "base"       
tools      "3.1.1"     "base"       
utils      "3.1.1"     "base"       
vegan      "2.0-10"    NA           
           Depends                                          
KernSmooth "R (>= 2.5.0), stats"                            
MASS       "R (>= 3.0.0), grDevices, graphics, stats, utils"
Matrix     "R (>= 2.15.2), methods"                         
base       NA                                               
boot       "R (>= 3.0.0), graphics, stats"                  
class      "R (>= 3.0.0), stats, utils"                     
cluster    "R (>= 2.12.0), stats, utils"                    
codetools  "R (>= 2.1)"                                     
compiler   NA                                               
datasets   NA                                               
foreign    "R (>= 3.0.0), stats"                            
grDevices  NA                                               
graphics   NA                                               
grid       NA                                               
lattice    "R (>= 2.15.1)"                                  
manipulate "R (>= 2.10.0)"                                  
methods    NA                                               
mgcv       "R (>= 2.14.0), nlme (>= 3.1-64)"                
nlme       "graphics, stats, R (>= 3.0.0)"                  
nnet       "R (>= 2.14.0), stats, utils"                    
parallel   NA                                               
permute    "R (>= 2.14.0)"                                  
plotrix    NA                                               
rpart      "R (>= 2.15.0), graphics, stats, grDevices"      
rstudio    "R (>= 2.10.0)"                                  
spatial    "R (>= 3.0.0), graphics, stats, utils"           
splines    NA                                               
stats      NA                                               
stats4     NA                                               
survival   "stats, utils, graphics, splines, R (>= 2.13.0)" 
tcltk      NA                                               
tools      NA                                               
utils      NA                                               
vegan      "permute (>= 0.8-0), lattice, R (>= 2.15.0)"     
           Imports                                   LinkingTo
KernSmooth NA                                        NA       
MASS       NA                                        NA       
Matrix     "graphics, grid, stats, utils, lattice"   NA       
base       NA                                        NA       
boot       NA                                        NA       
class      "MASS"                                    NA       
cluster    "graphics, grDevices"                     NA       
codetools  NA                                        NA       
compiler   NA                                        NA       
datasets   NA                                        NA       
foreign    "methods, utils"                          NA       
grDevices  NA                                        NA       
graphics   "grDevices"                               NA       
grid       "grDevices"                               NA       
lattice    "grid, grDevices, graphics, stats, utils" NA       
manipulate NA                                        NA       
methods    "utils"                                   NA       
mgcv       "methods, stats, graphics, Matrix"        NA       
nlme       "lattice"                                 NA       
nnet       NA                                        NA       
parallel   "tools"                                   NA       
permute    NA                                        NA       
plotrix    NA                                        NA       
rpart      NA                                        NA       
rstudio    "utils"                                   NA       
spatial    NA                                        NA       
splines    "graphics, stats"                         NA       
stats      NA                                        NA       
stats4     "graphics, methods, stats"                NA       
survival   NA                                        NA       
tcltk      "utils"                                   NA       
tools      NA                                        NA       
utils      NA                                        NA       
vegan      NA                                        NA       
           Suggests                                        
KernSmooth "MASS"                                          
MASS       "lattice, nlme, nnet, survival"                 
Matrix     "expm, MASS"                                    
base       NA                                              
boot       "MASS, survival"                                
class      NA                                              
cluster    "MASS"                                          
codetools  NA                                              
compiler   NA                                              
datasets   NA                                              
foreign    NA                                              
grDevices  NA                                              
graphics   NA                                              
grid       "lattice"                                       
lattice    "KernSmooth, MASS"                              
manipulate "graphics, grid, lattice, ggplot2"              
methods    NA                                              
mgcv       "splines, parallel, survival, MASS"             
nlme       "Hmisc, MASS"                                   
nnet       "MASS"                                          
parallel   NA                                              
permute    "vegan (>= 2.0-0), testthat (>= 0.5), parallel" 
plotrix    NA                                              
rpart      "survival"                                      
rstudio    NA                                              
spatial    "MASS"                                          
splines    NA                                              
stats      NA                                              
stats4     NA                                              
survival   NA                                              
tcltk      NA                                              
tools      NA                                              
utils      NA                                              
vegan      "MASS, mgcv, cluster, scatterplot3d, rgl, tcltk"
           Enhances                                License          
KernSmooth NA                                      "Unlimited"      
MASS       NA                                      "GPL-2 | GPL-3"  
Matrix     "MatrixModels, graph, SparseM, sfsmisc" "GPL (>= 2)"     
base       NA                                      "Part of R 3.1.1"
boot       NA                                      "Unlimited"      
class      NA                                      "GPL-2 | GPL-3"  
cluster    NA                                      "GPL (>= 2)"     
codetools  NA                                      "GPL"            
compiler   NA                                      "Part of R 3.1.1"
datasets   NA                                      "Part of R 3.1.1"
foreign    NA                                      "GPL (>= 2)"     
grDevices  NA                                      "Part of R 3.1.1"
graphics   NA                                      "Part of R 3.1.1"
grid       NA                                      "Part of R 3.1.1"
lattice    "chron"                                 "GPL (>= 2)"     
manipulate NA                                      ""               
methods    NA                                      "Part of R 3.1.1"
mgcv       NA                                      "GPL (>= 2)"     
nlme       NA                                      "GPL (>= 2)"     
nnet       NA                                      "GPL-2 | GPL-3"  
parallel   "snow, nws, Rmpi"                       "Part of R 3.1.1"
permute    NA                                      "GPL-2"          
plotrix    NA                                      "GPL (>= 2)"     
rpart      NA                                      "GPL-2 | GPL-3"  
rstudio    NA                                      ""               
spatial    NA                                      "GPL-2 | GPL-3"  
splines    NA                                      "Part of R 3.1.1"
stats      NA                                      "Part of R 3.1.1"
stats4     NA                                      "Part of R 3.1.1"
survival   NA                                      "LGPL (>= 2)"    
tcltk      NA                                      "Part of R 3.1.1"
tools      NA                                      "Part of R 3.1.1"
utils      NA                                      "Part of R 3.1.1"
vegan      NA                                      "GPL-2"          
           License_is_FOSS License_restricts_use OS_type MD5sum
KernSmooth NA              NA                    NA      NA    
MASS       NA              NA                    NA      NA    
Matrix     NA              NA                    NA      NA    
base       NA              NA                    NA      NA    
boot       NA              NA                    NA      NA    
class      NA              NA                    NA      NA    
cluster    NA              NA                    NA      NA    
codetools  NA              NA                    NA      NA    
compiler   NA              NA                    NA      NA    
datasets   NA              NA                    NA      NA    
foreign    NA              NA                    NA      NA    
grDevices  NA              NA                    NA      NA    
graphics   NA              NA                    NA      NA    
grid       NA              NA                    NA      NA    
lattice    NA              NA                    NA      NA    
manipulate NA              NA                    NA      NA    
methods    NA              NA                    NA      NA    
mgcv       NA              NA                    NA      NA    
nlme       NA              NA                    NA      NA    
nnet       NA              NA                    NA      NA    
parallel   NA              NA                    NA      NA    
permute    NA              NA                    NA      NA    
plotrix    NA              NA                    NA      NA    
rpart      NA              NA                    NA      NA    
rstudio    NA              NA                    NA      NA    
spatial    NA              NA                    NA      NA    
splines    NA              NA                    NA      NA    
stats      NA              NA                    NA      NA    
stats4     NA              NA                    NA      NA    
survival   NA              NA                    NA      NA    
tcltk      NA              NA                    NA      NA    
tools      NA              NA                    NA      NA    
utils      NA              NA                    NA      NA    
vegan      NA              NA                    NA      NA    
           NeedsCompilation Built  
KernSmooth "yes"            "3.1.1"
MASS       "yes"            "3.1.1"
Matrix     "yes"            "3.1.1"
base       NA               "3.1.1"
boot       "no"             "3.1.1"
class      "yes"            "3.1.1"
cluster    "yes"            "3.1.1"
codetools  NA               "3.1.1"
compiler   NA               "3.1.1"
datasets   NA               "3.1.1"
foreign    "yes"            "3.1.1"
grDevices  NA               "3.1.1"
graphics   NA               "3.1.1"
grid       NA               "3.1.1"
lattice    "yes"            "3.1.1"
manipulate NA               "3.1.1"
methods    NA               "3.1.1"
mgcv       "yes"            "3.1.1"
nlme       "yes"            "3.1.1"
nnet       "yes"            "3.1.1"
parallel   NA               "3.1.1"
permute    "no"             "3.1.0"
plotrix    "no"             "3.1.0"
rpart      "yes"            "3.1.1"
rstudio    NA               "3.1.1"
spatial    "yes"            "3.1.1"
splines    NA               "3.1.1"
stats      NA               "3.1.1"
stats4     NA               "3.1.1"
survival   "yes"            "3.1.1"
tcltk      NA               "3.1.1"
tools      NA               "3.1.1"
utils      NA               "3.1.1"
vegan      "yes"            "3.1.0"
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
--- Please select a CRAN mirror for use in this session ---
KernSmooth :
 Version 2.23-12 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 2.23-13 available at http://mirrors.ustc.edu.cn/CRAN
MASS :
 Version 7.3-33 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 7.3-35 available at http://mirrors.ustc.edu.cn/CRAN
boot :
 Version 1.3-11 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 1.3-13 available at http://mirrors.ustc.edu.cn/CRAN
class :
 Version 7.3-10 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 7.3-11 available at http://mirrors.ustc.edu.cn/CRAN
cluster :
 Version 1.15.2 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 1.15.3 available at http://mirrors.ustc.edu.cn/CRAN
codetools :
 Version 0.2-8 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 0.2-9 available at http://mirrors.ustc.edu.cn/CRAN
mgcv :
 Version 1.8-0 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 1.8-3 available at http://mirrors.ustc.edu.cn/CRAN
nlme :
 Version 3.1-117 installed in /Library/Frameworks/R.framework/Versions/3.1/Resources/library 
 Version 3.1-118 available at http://mirrors.ustc.edu.cn/CRAN

The downloaded binary packages are in
	/var/folders/zy/kg1f_x1n3pn1tnwfrk6hcbww0000gn/T//RtmpLNjqPS/downloaded_packages
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
(list "stats" '(("formula" . "") ("data" . "") ("subset" . "") ("weights" . "") ("na.action" . "") ("method" . "qr") ("model" . "TRUE") ("x" . "FALSE") ("y" . "FALSE") ("qr" . "TRUE") ("singular.ok" . "TRUE") ("contrasts" . "NULL") ("offset" . "") ("..." . "")) '("formula" "data" "subset" "weights" "na.action" "method" "model" "x" "y" "qr" "singular.ok" "contrasts" "offset" "..."))

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> plot(age,weight)

> lm(mpg-wt, data = mtcars)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Coefficients:
(Intercept)           wt  
     37.285       -5.344  


> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> 
> lm(mpg ~ wt, data = mtcars)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Coefficients:
(Intercept)           wt  
     37.285       -5.344  

NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "swM"         
[16] "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
(list "base" '(("object" . "") ("..." . "") ("digits" . "max(3, getOption(\"digits\") - 3)")) '("object" "..." "digits" "intercept" "split" "expand.split" "keep.zero.df" "maxsum" "dispersion" "correlation" "symbolic.cor" "test" "tol" "loadings" "cutoff" "useSource"))

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> lmfit <- lm(mpg ~ wt, data = mtcars)

> summary(lmfit)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5432 -2.3647 -0.1252  1.4096  6.8727 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***
wt           -5.3445     0.5591  -9.559 1.29e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.046 on 30 degrees of freedom
Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446 
F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10

NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "lmfit"       
[16] "swM"          "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> lmfit <- lm(mpg ~ wt, data = mtcars)

> summary(lmfit)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5432 -2.3647 -0.1252  1.4096  6.8727 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***
wt           -5.3445     0.5591  -9.559 1.29e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.046 on 30 degrees of freedom
Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446 
F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10


> plot(lmfit)
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "i"            "lmfit"       
[16] "swM"          "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
[1] "/Library/Frameworks/R.framework/Versions/3.1/Resources/library/stats/help/influence.measures"
(list "stats" '(("model" . "") ("..." . "")) '("model" "..." "infl" "res" "dispersion" "hat" "sd"))

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> lmfit <- lm(mpg ~ wt, data = mtcars)

> summary(lmfit)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5432 -2.3647 -0.1252  1.4096  6.8727 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***
wt           -5.3445     0.5591  -9.559 1.29e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.046 on 30 degrees of freedom
Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446 
F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10


> plot(lmfit)

> cook <- cooks.distance(lmfit)

> plot(cook)
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "cook"         "i"           
[16] "lmfit"        "swM"          "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     

The downloaded binary packages are in
	/var/folders/zy/kg1f_x1n3pn1tnwfrk6hcbww0000gn/T//RtmpLNjqPS/downloaded_packages
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "cook"         "i"           
[16] "lmfit"        "swM"          "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
(list "utils" '(("topic" . "") ("package" . "NULL") ("lib.loc" . "NULL") ("verbose" . "getOption(\"verbose\")") ("try.all.packages" . "getOption(\"help.try.all.packages\")") ("help_type" . "getOption(\"help_type\")")) '("topic" "package" "lib.loc" "verbose" "try.all.packages" "help_type"))
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "cook"         "i"           
[16] "lmfit"        "swM"          "weight"      
 [1] ".GlobalEnv"        "ESSR"              "package:stats"    
 [4] "package:graphics"  "package:grDevices" "package:utils"    
 [7] "package:datasets"  "package:methods"   "Autoloads"        
[10] "package:base"     
(list "base" '(("package" . "") ("help" . "") ("pos" . "2") ("lib.loc" . "NULL") ("character.only" . "FALSE") ("logical.return" . "FALSE") ("warn.conflicts" . "TRUE") ("quietly" . "FALSE") ("verbose" . "getOption(\"verbose\")")) '("package" "help" "pos" "lib.loc" "character.only" "logical.return" "warn.conflicts" "quietly" "verbose"))

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> lmfit <- lm(mpg ~ wt, data = mtcars)

> summary(lmfit)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5432 -2.3647 -0.1252  1.4096  6.8727 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***
wt           -5.3445     0.5591  -9.559 1.29e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.046 on 30 degrees of freedom
Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446 
F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10


> plot(lmfit)

> cook <- cooks.distance(lmfit)

> plot(cook)

> library(vcd)

> Arthritis
   ID Treatment    Sex Age Improved
1  57   Treated   Male  27     Some
2  46   Treated   Male  29     None
3  77   Treated   Male  30     None
4  17   Treated   Male  32   Marked
5  36   Treated   Male  46   Marked
6  23   Treated   Male  58   Marked
7  75   Treated   Male  59     None
8  39   Treated   Male  59   Marked
9  33   Treated   Male  63     None
10 55   Treated   Male  63     None
11 30   Treated   Male  64     None
12  5   Treated   Male  64     Some
13 63   Treated   Male  69     None
14 83   Treated   Male  70   Marked
15 66   Treated Female  23     None
16 40   Treated Female  32     None
17  6   Treated Female  37     Some
18  7   Treated Female  41     None
19 72   Treated Female  41   Marked
20 37   Treated Female  48     None
21 82   Treated Female  48   Marked
22 53   Treated Female  55   Marked
23 79   Treated Female  55   Marked
24 26   Treated Female  56   Marked
25 28   Treated Female  57   Marked
26 60   Treated Female  57   Marked
27 22   Treated Female  57   Marked
28 27   Treated Female  58     None
29  2   Treated Female  59   Marked
30 59   Treated Female  59   Marked
31 62   Treated Female  60   Marked
32 84   Treated Female  61   Marked
33 64   Treated Female  62     Some
34 34   Treated Female  62   Marked
35 58   Treated Female  66   Marked
36 13   Treated Female  67   Marked
37 61   Treated Female  68     Some
38 65   Treated Female  68   Marked
39 11   Treated Female  69     None
40 56   Treated Female  69     Some
41 43   Treated Female  70     Some
42  9   Placebo   Male  37     None
43 14   Placebo   Male  44     None
44 73   Placebo   Male  50     None
45 74   Placebo   Male  51     None
46 25   Placebo   Male  52     None
47 18   Placebo   Male  53     None
48 21   Placebo   Male  59     None
49 52   Placebo   Male  59     None
50 45   Placebo   Male  62     None
51 41   Placebo   Male  62     None
52  8   Placebo   Male  63   Marked
53 80   Placebo Female  23     None
54 12   Placebo Female  30     None
55 29   Placebo Female  30     None
56 50   Placebo Female  31     Some
57 38   Placebo Female  32     None
58 35   Placebo Female  33   Marked
59 51   Placebo Female  37     None
60 54   Placebo Female  44     None
61 76   Placebo Female  45     None
62 16   Placebo Female  46     None
63 69   Placebo Female  48     None
64 31   Placebo Female  49     None
65 20   Placebo Female  51     None
66 68   Placebo Female  53     None
67 81   Placebo Female  54     None
68  4   Placebo Female  54     None
69 78   Placebo Female  54   Marked
70 70   Placebo Female  55   Marked
71 49   Placebo Female  57     None
72 10   Placebo Female  57     Some
73 47   Placebo Female  58     Some
74 44   Placebo Female  59     Some
75 24   Placebo Female  59   Marked
76 48   Placebo Female  61     None
77 19   Placebo Female  63     Some
78  3   Placebo Female  64     None
79 67   Placebo Female  65   Marked
80 32   Placebo Female  66     None
81 42   Placebo Female  66     None
82 15   Placebo Female  66     Some
83 71   Placebo Female  68     Some
84  1   Placebo Female  74   Marked
NULL
 [1] ".Random.seed" "C."           "C1"           "C2"           "C3"          
 [6] "Cl"           "EV"           "R."           "Rc"           "Rp"          
[11] "age"          "clK"          "clS"          "cook"         "i"           
[16] "lmfit"        "swM"          "weight"      
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
NULL
  [1] ".Depends"              "Arthritis"             "Baseball"             
  [4] "BrokenMarriage"        "Bundesliga"            "Bundestag2005"        
  [7] "Butterfly"             "CoalMiners"            "DanishWelfare"        
 [10] "Employment"            "Federalist"            "Hitters"              
 [13] "HorseKicks"            "Hospital"              "JobSatisfaction"      
 [16] "JointSports"           "Kappa"                 "Lifeboats"            
 [19] "MSPatients"            "NonResponse"           "Ord_estimate"         
 [22] "Ord_plot"              "OvaryCancer"           "PreSex"               
 [25] "Punishment"            "RepVict"               "Rochdale"             
 [28] "Saxony"                "SexualFun"             "SpaceShuttle"         
 [31] "Suicide"               "Trucks"                "UKSoccer"             
 [34] "VisualAcuity"          "VonBort"               "WeldonDice"           
 [37] "WomenQueue"            "agreementplot"         "assoc"                
 [40] "assocstats"            "cbind.structable"      "cd_plot"              
 [43] "co_table"              "coindep_test"          "cotab_assoc"          
 [46] "cotab_coindep"         "cotab_fourfold"        "cotab_mosaic"         
 [49] "cotab_sieve"           "cotabplot"             "distplot"             
 [52] "doubledecker"          "fourfold"              "goodfit"              
 [55] "grid_barplot"          "grid_legend"           "hcl2hex"              
 [58] "hls"                   "independence_table"    "is.structable"        
 [61] "labeling_border"       "labeling_cboxed"       "labeling_cells"       
 [64] "labeling_conditional"  "labeling_doubledecker" "labeling_lboxed"      
 [67] "labeling_left"         "labeling_list"         "labeling_residuals"   
 [70] "labeling_values"       "legend_fixed"          "legend_resbased"      
 [73] "mar_table"             "mosaic"                "oddsratio"            
 [76] "pairs_assoc"           "pairs_barplot"         "pairs_diagonal_mosaic"
 [79] "pairs_diagonal_text"   "pairs_mosaic"          "pairs_sieve"          
 [82] "pairs_strucplot"       "pairs_text"            "rbind.structable"     
 [85] "rootogram"             "shading_Friendly"      "shading_binary"       
 [88] "shading_hcl"           "shading_hsv"           "shading_max"          
 [91] "shading_sieve"         "sieve"                 "spacing_conditional"  
 [94] "spacing_dimequal"      "spacing_equal"         "spacing_highlighting" 
 [97] "spacing_increase"      "spine"                 "struc_assoc"          
[100] "struc_mosaic"          "struc_sieve"           "strucplot"            
[103] "structable"            "table2d_summary"       "ternaryplot"          
[106] "tile"                  "woolf_test"           
NULL
  [1] "absolute.size"        "addGrob"              "applyEdit"           
  [4] "applyEdits"           "arcCurvature"         "arrow"               
  [7] "arrowsGrob"           "ascentDetails"        "bezierGrob"          
 [10] "bezierPoints"         "calcStringMetric"     "childNames"          
 [13] "circleGrob"           "clipGrob"             "convertHeight"       
 [16] "convertNative"        "convertUnit"          "convertWidth"        
 [19] "convertX"             "convertY"             "current.parent"      
 [22] "current.rotation"     "current.transform"    "current.viewport"    
 [25] "current.vpPath"       "current.vpTree"       "curveGrob"           
 [28] "dataViewport"         "depth"                "descentDetails"      
 [31] "downViewport"         "draw.details"         "drawDetails"         
 [34] "editDetails"          "editGrob"             "engine.display.list" 
 [37] "explode"              "forceGrob"            "frameGrob"           
 [40] "functionGrob"         "gEdit"                "gEditList"           
 [43] "gList"                "gPath"                "gTree"               
 [46] "get.gpar"             "getGrob"              "getNames"            
 [49] "gpar"                 "grid.DLapply"         "grid.abline"         
 [52] "grid.add"             "grid.arrows"          "grid.bezier"         
 [55] "grid.cap"             "grid.circle"          "grid.clip"           
 [58] "grid.collection"      "grid.convert"         "grid.convertHeight"  
 [61] "grid.convertWidth"    "grid.convertX"        "grid.convertY"       
 [64] "grid.copy"            "grid.curve"           "grid.delay"          
 [67] "grid.display.list"    "grid.draw"            "grid.edit"           
 [70] "grid.force"           "grid.frame"           "grid.function"       
 [73] "grid.gedit"           "grid.get"             "grid.gget"           
 [76] "grid.grab"            "grid.grabExpr"        "grid.gremove"        
 [79] "grid.grep"            "grid.grill"           "grid.grob"           
 [82] "grid.layout"          "grid.legend"          "grid.line.to"        
 [85] "grid.lines"           "grid.locator"         "grid.ls"             
 [88] "grid.move.to"         "grid.multipanel"      "grid.newpage"        
 [91] "grid.null"            "grid.pack"            "grid.panel"          
 [94] "grid.path"            "grid.place"           "grid.plot.and.legend"
 [97] "grid.points"          "grid.polygon"         "grid.polyline"       
[100] "grid.pretty"          "grid.raster"          "grid.record"         
[103] "grid.rect"            "grid.refresh"         "grid.remove"         
[106] "grid.reorder"         "grid.revert"          "grid.roundrect"      
[109] "grid.segments"        "grid.set"             "grid.show.layout"    
[112] "grid.show.viewport"   "grid.strip"           "grid.text"           
[115] "grid.xaxis"           "grid.xspline"         "grid.yaxis"          
[118] "grob"                 "grobAscent"           "grobDescent"         
[121] "grobHeight"           "grobName"             "grobPathListing"     
[124] "grobTree"             "grobWidth"            "grobX"               
[127] "grobY"                "heightDetails"        "is.grob"             
[130] "is.unit"              "layout.heights"       "layout.torture"      
[133] "layout.widths"        "layoutRegion"         "legendGrob"          
[136] "lineToGrob"           "linesGrob"            "makeContent"         
[139] "makeContext"          "moveToGrob"           "nestedListing"       
[142] "nullGrob"             "packGrob"             "pathGrob"            
[145] "pathListing"          "placeGrob"            "plotViewport"        
[148] "pointsGrob"           "polygonGrob"          "polylineGrob"        
[151] "pop.viewport"         "popViewport"          "postDrawDetails"     
[154] "preDrawDetails"       "push.viewport"        "pushViewport"        
[157] "rasterGrob"           "rectGrob"             "removeGrob"          
[160] "reorderGrob"          "resolveHJust"         "resolveRasterSize"   
[163] "resolveVJust"         "roundrectGrob"        "seekViewport"        
[166] "segmentsGrob"         "setChildren"          "setGrob"             
[169] "showGrob"             "showViewport"         "stringAscent"        
[172] "stringDescent"        "stringHeight"         "stringWidth"         
[175] "textGrob"             "unit"                 "unit.c"              
[178] "unit.length"          "unit.pmax"            "unit.pmin"           
[181] "unit.rep"             "upViewport"           "valid.just"          
[184] "validDetails"         "viewport"             "viewport.layout"     
[187] "viewport.transform"   "vpList"               "vpPath"              
[190] "vpStack"              "vpTree"               "widthDetails"        
[193] "xDetails"             "xaxisGrob"            "xsplineGrob"         
[196] "xsplinePoints"        "yDetails"             "yaxisGrob"           
(list "utils" '(("topic" . "") ("package" . "NULL") ("lib.loc" . "NULL") ("character.only" . "FALSE") ("give.lines" . "FALSE") ("local" . "FALSE") ("echo" . "TRUE") ("verbose" . "getOption(\"verbose\")") ("setRNG" . "FALSE") ("ask" . "getOption(\"example.ask\")") ("prompt.prefix" . "abbreviate(topic, 6)") ("run.dontrun" . "FALSE")) '("topic" "package" "lib.loc" "character.only" "give.lines" "local" "echo" "verbose" "setRNG" "ask" "prompt.prefix" "run.dontrun"))

> age <- c(1,3,5,2,11,9,3,9,12,3)

> weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)

> mean(weight)
[1] 7.06

> sd(weight)
[1] 2.077498

> cor(age,weight)
[1] 0.9075655

> # plot(age,weight)
> 
> lmfit <- lm(mpg ~ wt, data = mtcars)

> summary(lmfit)

Call:
lm(formula = mpg ~ wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5432 -2.3647 -0.1252  1.4096  6.8727 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***
wt           -5.3445     0.5591  -9.559 1.29e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.046 on 30 degrees of freedom
Multiple R-squared:  0.7528,	Adjusted R-squared:  0.7446 
F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10


> plot(lmfit)

> cook <- cooks.distance(lmfit)

> plot(cook)

> library(vcd)

> Arthritis
   ID Treatment    Sex Age Improved
1  57   Treated   Male  27     Some
2  46   Treated   Male  29     None
3  77   Treated   Male  30     None
4  17   Treated   Male  32   Marked
5  36   Treated   Male  46   Marked
6  23   Treated   Male  58   Marked
7  75   Treated   Male  59     None
8  39   Treated   Male  59   Marked
9  33   Treated   Male  63     None
10 55   Treated   Male  63     None
11 30   Treated   Male  64     None
12  5   Treated   Male  64     Some
13 63   Treated   Male  69     None
14 83   Treated   Male  70   Marked
15 66   Treated Female  23     None
16 40   Treated Female  32     None
17  6   Treated Female  37     Some
18  7   Treated Female  41     None
19 72   Treated Female  41   Marked
20 37   Treated Female  48     None
21 82   Treated Female  48   Marked
22 53   Treated Female  55   Marked
23 79   Treated Female  55   Marked
24 26   Treated Female  56   Marked
25 28   Treated Female  57   Marked
26 60   Treated Female  57   Marked
27 22   Treated Female  57   Marked
28 27   Treated Female  58     None
29  2   Treated Female  59   Marked
30 59   Treated Female  59   Marked
31 62   Treated Female  60   Marked
32 84   Treated Female  61   Marked
33 64   Treated Female  62     Some
34 34   Treated Female  62   Marked
35 58   Treated Female  66   Marked
36 13   Treated Female  67   Marked
37 61   Treated Female  68     Some
38 65   Treated Female  68   Marked
39 11   Treated Female  69     None
40 56   Treated Female  69     Some
41 43   Treated Female  70     Some
42  9   Placebo   Male  37     None
43 14   Placebo   Male  44     None
44 73   Placebo   Male  50     None
45 74   Placebo   Male  51     None
46 25   Placebo   Male  52     None
47 18   Placebo   Male  53     None
48 21   Placebo   Male  59     None
49 52   Placebo   Male  59     None
50 45   Placebo   Male  62     None
51 41   Placebo   Male  62     None
52  8   Placebo   Male  63   Marked
53 80   Placebo Female  23     None
54 12   Placebo Female  30     None
55 29   Placebo Female  30     None
56 50   Placebo Female  31     Some
57 38   Placebo Female  32     None
58 35   Placebo Female  33   Marked
59 51   Placebo Female  37     None
60 54   Placebo Female  44     None
61 76   Placebo Female  45     None
62 16   Placebo Female  46     None
63 69   Placebo Female  48     None
64 31   Placebo Female  49     None
65 20   Placebo Female  51     None
66 68   Placebo Female  53     None
67 81   Placebo Female  54     None
68  4   Placebo Female  54     None
69 78   Placebo Female  54   Marked
70 70   Placebo Female  55   Marked
71 49   Placebo Female  57     None
72 10   Placebo Female  57     Some
73 47   Placebo Female  58     Some
74 44   Placebo Female  59     Some
75 24   Placebo Female  59   Marked
76 48   Placebo Female  61     None
77 19   Placebo Female  63     Some
78  3   Placebo Female  64     None
79 67   Placebo Female  65   Marked
80 32   Placebo Female  66     None
81 42   Placebo Female  66     None
82 15   Placebo Female  66     Some
83 71   Placebo Female  68     Some
84  1   Placebo Female  74   Marked

> example(Arthritis)

Arthrt> data("Arthritis")

Arthrt> art <- xtabs(~ Treatment + Improved, data = Arthritis, subset = Sex == "Female")

Arthrt> art
         Improved
Treatment None Some Marked
  Placebo   19    7      6
  Treated    6    5     16

Arthrt> mosaic(art, gp = shading_Friendly)

Arthrt> mosaic(art, gp = shading_max)

> y <- matrix(1:20, nrow = 5, ncol = 4)
     [,1] [,2] [,3] [,4]
[1,]    1    6   11   16
[2,]    2    7   12   17
[3,]    3    8   13   18
[4,]    4    9   14   19
[5,]    5   10   15   20
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "clK"          "clS"         
[16] "cook"         "i"            "lmfit"        "swM"          "weight"      
[21] "y"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
(list "base" '(("data" . "NA") ("nrow" . "1") ("ncol" . "1") ("byrow" . "FALSE") ("dimnames" . "NULL")) '("data" "nrow" "ncol" "byrow" "dimnames"))
(list "" '(("..." . "")) '("..."))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "i"            "lmfit"       
[21] "mymatrix"     "rnames"       "swM"          "weight"       "y"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "base" '(("data" . "NA") ("dim" . "length(data)") ("dimnames" . "NULL")) '("data" "dim" "dimnames"))
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
[1] "1:"
(list "" '(("..." . "")) '("..."))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24

NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "dim1"         "dim2"        
[21] "dim3"         "i"            "lmfit"        "mymatrix"     "rnames"      
[26] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
(list "base" '(("..." . "") ("row.names" . "NULL") ("check.rows" . "FALSE") ("check.names" . "TRUE") ("stringsAsFactors" . "default.stringsAsFactors()")) '("..." "row.names" "check.rows" "check.names" "stringsAsFactors"))
[1] "/Library/Frameworks/R.framework/Resources/library/base/help/diag"

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "lmfit"        "mymatrix"    
[26] "patientID"    "patientdata"  "rnames"       "status"       "swM"         
[31] "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
[1] "1:"

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "lmfit"        "mymatrix"    
[26] "patientID"    "patientdata"  "rnames"       "status"       "swM"         
[31] "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "lmfit"        "mymatrix"    
[26] "patientID"    "patientdata"  "rnames"       "status"       "swM"         
[31] "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "base" '(("..." . "") ("exclude" . "if (useNA == \"no\") c(NA, NaN)") ("useNA" . "c(\"no\", \"ifany\", \"always\")") ("dnn" . "list.names(...)") ("deparse.level" . "1")) '("..." "exclude" "useNA" "dnn" "deparse.level"))
[1] "patientdata$"          "patientdata$patientID" "patientdata$age"      
[4] "patientdata$diabetes"  "patientdata$status"   
[1] "patientdata$d"        "patientdata$diabetes"
[1] "patientdata$dia"      "patientdata$diabetes"
[1] "patientdata$"          "patientdata$patientID" "patientdata$age"      
[4] "patientdata$diabetes"  "patientdata$status"   
[1] "patientdata$s"      "patientdata$status"
[1] "patientdata$sta"    "patientdata$status"
[1] "patientdata$stat"   "patientdata$status"
[1] "patientdata$status" "patientdata$status"

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "lmfit"        "mymatrix"    
[26] "patientID"    "patientdata"  "rnames"       "status"       "swM"         
[31] "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "base" '(("data" . "") ("expr" . "") ("..." . "")) '("data" "expr" "..."))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "lmfit"        "mymatrix"    
[26] "patientID"    "patientdata"  "rnames"       "status"       "swM"         
[31] "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
[1] "/Library/Frameworks/R.framework/Versions/3.1/Resources/library/graphics/help/mtext"

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 

> with(mtcars, {
+     stats <-  summary(mpg)
+     keepstats <<- summary(mpg)
+ })
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
(list "base" '(("x" . "character()") ("levels" . "") ("labels" . "levels") ("exclude" . "NA") ("ordered" . "is.ordered(x)") ("nmax" . "NA")) '("x" "levels" "labels" "exclude" "ordered" "nmax"))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 

> with(mtcars, {
+     stats <-  summary(mpg)
+     keepstats <<- summary(mpg)
+ })

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> diabetes <- factor(diabetes)
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 

> with(mtcars, {
+     stats <-  summary(mpg)
+     keepstats <<- summary(mpg)
+ })

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> diabetes <- factor(diabetes)

> diabetes
[1] Type1 Type2 Type1 Type1
Levels: Type1 Type2
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
[1] "/Library/Frameworks/R.framework/Versions/3.1/Resources/library/stats/help/factor.scope"

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 

> with(mtcars, {
+     stats <-  summary(mpg)
+     keepstats <<- summary(mpg)
+ })

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> diabetes <- factor(diabetes)

> diabetes
[1] Type1 Type2 Type1 Type1
Levels: Type1 Type2

> status <- c("Poor", "Improved", "Excellent", "Poor")

> status <- factor(status, ordered = TRUE)
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> patientdata
  patientID age diabetes    status
1         1  25    Type1      Poor
2         2  34    Type2  Improved
3         3  28    Type1 Excellent
4         4  52    Type1      Poor

> patientdata[1:2]
  patientID age
1         1  25
2         2  34
3         3  28
4         4  52

> patientdata[c("diabetes", "status")]
  diabetes    status
1    Type1      Poor
2    Type2  Improved
3    Type1 Excellent
4    Type1      Poor

> table(patientdata$diabetes, patientdata$status)
       
        Excellent Improved Poor
  Type1         1        0    2
  Type2         0        1    0

> with(mtcars, {
+     stats <-  summary(mpg)
+     stats
+ })
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  10.40   15.42   19.20   20.09   22.80   33.90 

> with(mtcars, {
+     stats <-  summary(mpg)
+     keepstats <<- summary(mpg)
+ })

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> diabetes <- factor(diabetes)

> diabetes
[1] Type1 Type2 Type1 Type1
Levels: Type1 Type2

> status <- c("Poor", "Improved", "Excellent", "Poor")

> status <- factor(status, ordered = TRUE)

> status
[1] Poor      Improved  Excellent Poor     
Levels: Excellent < Improved < Poor
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
(list "utils" '(("object" . "") ("max.level" . "NA") ("vec.len" . "strO$vec.len") ("digits.d" . "strO$digits.d") ("nchar.max" . "128") ("give.attr" . "TRUE") ("give.head" . "TRUE") ("give.length" . "give.head") ("width" . "getOption(\"width\")") ("nest.lev" . "0") ("indent.str" . "paste(rep.int(\" \", max(0, nest.lev + 1)), collapse = \"..\")") ("comp.str" . "$ ") ("no.list" . "FALSE") ("envir" . "baseenv()") ("strict.width" . "strO$strict.width") ("formatNum" . "strO$formatNum") ("list.len" . "99") ("..." . "")) '("object" "..." "max.level" "vec.len" "digits.d" "nchar.max" "give.attr" "give.head" "give.length" "width" "nest.lev" "indent.str" "comp.str" "no.list" "envir" "strict.width" "formatNum" "list.len" "wid" "last.str" "stem" "digits"))

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> patientdata <-  data.frame(patientID, age, diabetes, status)

> str(patientdata)
'data.frame':	4 obs. of  4 variables:
 $ patientID: num  1 2 3 4
 $ age      : num  25 34 28 52
 $ diabetes : Factor w/ 2 levels "Type1","Type2": 1 2 1 1
 $ status   : Factor w/ 3 levels "Excellent","Improved",..: 3 2 1 3
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> diabetes <- factor(diabetes)

> status <- factor(status, order = TRUE)

> patientdata <-  data.frame(patientID, age, diabetes, status)

> str(patientdata)
'data.frame':	4 obs. of  4 variables:
 $ patientID: num  1 2 3 4
 $ age      : num  25 34 28 52
 $ diabetes : Factor w/ 2 levels "Type1","Type2": 1 2 1 1
 $ status   : Ord.factor w/ 3 levels "Excellent"<"Improved"<..: 3 2 1 3
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> diabetes <- factor(diabetes)

> status <- factor(status, order = TRUE)

> patientdata <-  data.frame(patientID, age, diabetes, status)

> str(patientdata)
'data.frame':	4 obs. of  4 variables:
 $ patientID: num  1 2 3 4
 $ age      : num  25 34 28 52
 $ diabetes : Factor w/ 2 levels "Type1","Type2": 1 2 1 1
 $ status   : Ord.factor w/ 3 levels "Excellent"<"Improved"<..: 3 2 1 3

> summary(patientdata)
   patientID         age         diabetes       status 
 Min.   :1.00   Min.   :25.00   Type1:3   Excellent:1  
 1st Qu.:1.75   1st Qu.:27.25   Type2:1   Improved :1  
 Median :2.50   Median :31.00             Poor     :2  
 Mean   :2.50   Mean   :34.75                          
 3rd Qu.:3.25   3rd Qu.:38.50                          
 Max.   :4.00   Max.   :52.00                          
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> diabetes <- factor(diabetes)

> status <- factor(status, order = TRUE)

> patientdata <-  data.frame(patientID, age, diabetes, status)

> str(patientdata)
'data.frame':	4 obs. of  4 variables:
 $ patientID: num  1 2 3 4
 $ age      : num  25 34 28 52
 $ diabetes : Factor w/ 2 levels "Type1","Type2": 1 2 1 1
 $ status   : Ord.factor w/ 3 levels "Excellent"<"Improved"<..: 3 2 1 3

> summary(patientdata)
   patientID         age         diabetes       status 
 Min.   :1.00   Min.   :25.00   Type1:3   Excellent:1  
 1st Qu.:1.75   1st Qu.:27.25   Type2:1   Improved :1  
 Median :2.50   Median :31.00             Poor     :2  
 Mean   :2.50   Mean   :34.75                          
 3rd Qu.:3.25   3rd Qu.:38.50                          
 Max.   :4.00   Max.   :52.00                          

> age[1]
[1] 25
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

> y <- matrix(1:20, nrow = 5, ncol = 4)

> cells <- c(1,26,24,68)

> rnames <- c("R1", "R2")

> cnames <- c("C1", "C2")

> mymatrix <- matrix(cells, nrow = 2, ncol = 2,
+                    byrow = TRUE, dimnames = list(rnames, cnames))

> mymatrix
   C1 C2
R1  1 26
R2 24 68

> dim1 <- c("A1", "A2")

> dim2 <- c("B1", "B2", "B3")

> dim3 <- c("C1", "C2", "C3", "C4")

> z <- array(1:24, c(2, 3, 4), dimnames = list(dim1,dim2,dim3))

> z
, , C1

   B1 B2 B3
A1  1  3  5
A2  2  4  6

, , C2

   B1 B2 B3
A1  7  9 11
A2  8 10 12

, , C3

   B1 B2 B3
A1 13 15 17
A2 14 16 18

, , C4

   B1 B2 B3
A1 19 21 23
A2 20 22 24


> patientID <- c(1, 2, 3, 4)

> age <- c(25, 34, 28, 52)

> diabetes <- c("Type1", "Type2", "Type1", "Type1")

> status <- c("Poor", "Improved", "Excellent", "Poor")

> diabetes <- factor(diabetes)

> status <- factor(status, order = TRUE)

> patientdata <-  data.frame(patientID, age, diabetes, status)

> str(patientdata)
'data.frame':	4 obs. of  4 variables:
 $ patientID: num  1 2 3 4
 $ age      : num  25 34 28 52
 $ diabetes : Factor w/ 2 levels "Type1","Type2": 1 2 1 1
 $ status   : Ord.factor w/ 3 levels "Excellent"<"Improved"<..: 3 2 1 3

> summary(patientdata)
   patientID         age         diabetes       status 
 Min.   :1.00   Min.   :25.00   Type1:3   Excellent:1  
 1st Qu.:1.75   1st Qu.:27.25   Type2:1   Improved :1  
 Median :2.50   Median :31.00             Poor     :2  
 Mean   :2.50   Mean   :34.75                          
 3rd Qu.:3.25   3rd Qu.:38.50                          
 Max.   :4.00   Max.   :52.00                          

> age[1]
[1] 25

> edit()
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

   package 'RODBC' is available as a source package but not as a binary

NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     

The downloaded binary packages are in
	/var/folders/zy/kg1f_x1n3pn1tnwfrk6hcbww0000gn/T//RtmpLNjqPS/downloaded_packages
(list "utils" '(("pkgs" . "") ("lib" . "") ("repos" . "getOption(\"repos\")") ("contriburl" . "contrib.url(repos, type)") ("method" . "") ("available" . "NULL") ("destdir" . "NULL") ("dependencies" . "NA") ("type" . "getOption(\"pkgType\")") ("configure.args" . "getOption(\"configure.args\")") ("configure.vars" . "getOption(\"configure.vars\")") ("clean" . "FALSE") ("Ncpus" . "getOption(\"Ncpus\", 1)") ("verbose" . "getOption(\"verbose\")") ("libs_only" . "FALSE") ("INSTALL_opts" . "") ("quiet" . "FALSE") ("keep_outputs" . "FALSE") ("..." . "")) '("pkgs" "lib" "repos" "contriburl" "method" "available" "destdir" "dependencies" "type" "configure.args" "configure.vars" "clean" "Ncpus" "verbose" "libs_only" "INSTALL_opts" "quiet" "keep_outputs" "..."))

The downloaded binary packages are in
	/var/folders/zy/kg1f_x1n3pn1tnwfrk6hcbww0000gn/T//RtmpLNjqPS/downloaded_packages

The downloaded binary packages are in
	/var/folders/zy/kg1f_x1n3pn1tnwfrk6hcbww0000gn/T//RtmpLNjqPS/downloaded_packages
NULL
 [1] ".Random.seed" "Arthritis"    "C."           "C1"           "C2"          
 [6] "C3"           "Cl"           "EV"           "R."           "Rc"          
[11] "Rp"           "age"          "art"          "cells"        "clK"         
[16] "clS"          "cnames"       "cook"         "diabetes"     "dim1"        
[21] "dim2"         "dim3"         "i"            "keepstats"    "lmfit"       
[26] "mymatrix"     "patientID"    "patientdata"  "rnames"       "status"      
[31] "swM"          "weight"       "y"            "z"           
 [1] ".GlobalEnv"        "package:vcd"       "package:grid"     
 [4] "ESSR"              "package:stats"     "package:graphics" 
 [7] "package:grDevices" "package:utils"     "package:datasets" 
[10] "package:methods"   "Autoloads"         "package:base"     
character(0)
No documentation for 'patientID' in specified packages and libraries:
you could try '??patientID'
character(0)
No documentation for 'patientdata' in specified packages and libraries:
you could try '??patientdata'
[1] "patientdata$"          "patientdata$patientID" "patientdata$age"      
[4] "patientdata$diabetes"  "patientdata$status"   
[1] "patientdata$g" "patientdata$" 
[1] "patientdata$ge" "patientdata$"  
[1] "patientdata$gen" "patientdata$"   
[1] "patientdata$gend" "patientdata$"    
[1] "patientdata$gender" "patientdata$"      
[1] "patientdata$"          "patientdata$patientID" "patientdata$age"      
[4] "patientdata$diabetes"  "patientdata$status"   
[1] "patientdata$g" "patientdata$" 
(list "" '(("..." . "") ("recursive" . "FALSE")) '("..." "recursive"))
